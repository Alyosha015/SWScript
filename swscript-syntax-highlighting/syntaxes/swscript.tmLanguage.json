{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SWScript",
	"patterns": [
		{
			"include": "#property"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#calls"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#string_double"
		},
		{
			"include": "#string_single"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"property": {
			"patterns": [
				{
					"name": "source.sws",
					"match": "@property(\\s*(text|number|bool))?",
					"captures": {
						"0": {"name": "keyword.other"},
						"2": {"name": "keyword.other.unit"}
					}
				}]
		},
		"keywords": {
			"patterns": [
			{
				"name": "keyword.control",
				"match": "\\b(import|if|else|for|while|continue|break|func|return|switch|intswitch|case|default)\\b"
			},
			{
				"name": "keyword.other",
				"match": "\\b(lua|local|true|false|null|_keys|_type|print|println)\\b"
			}]
		},
		"calls": {
			"patterns": [
				{
					"name": "source.sws",
					"match": "[a-zA-Z_$][a-zA-Z0-9_]*(\\()",
					"captures": {
						"0": {"name": "entity.name.function"}
					}
				}
			]
		},
		"variable": {
			"patterns": [
			{
				"name": "variable.name",
				"match": "[a-zA-Z_][a-zA-Z0-9_]*"
			},
			{
				"name": "source.sws",
				"match": "\\.([a-zA-Z0-9_]+)(?!.*\\()",
				"captures": {
					"1": { "name": "entity.other.attribute" }
				}
			},
			{
				"name": "source.sws",
				"match": "\\.([a-zA-Z0-9_]+)\\.",
				"captures": {
					"1": { "name": "entity.other.attribute" }
				}
			}
			]
		},
		"string_double": {
			"name": "string.other",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"match": "\\\\x[a-fA-F0-9]{1,2}",
					"name": "constant.character.escape"
				},
				{
					"match": "\\\\(\\d{1,3}|.)",
					"name": "constant.character.escape"
				}
			]
		},
		"string_single": {
			"name": "string.other",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"match": "\\\\x[a-fA-F0-9]{1,2}",
					"name": "constant.character.escape"
				},
				{
					"match": "\\\\(\\d{1,3}|.)",
					"name": "constant.character.escape"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
				  "name": "constant.numeric",
				  "match": "(0x)|(0b)|([0-9_]+)|(\\.[0-9_]+)"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment",
					"match": ";.*"
				}
			]
		}
	},
	"scopeName": "source.sws"
}